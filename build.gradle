buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net' }
        mavenCentral()
        jcenter()
        maven { url = 'https://repo.spongepowered.org/repository/maven-public' }
        maven { url = 'https://maven.parchmentmc.org' }
    }
    dependencies {
        classpath "net.minecraftforge.gradle:ForgeGradle:${forgegradle_version}"
        classpath "org.spongepowered:mixingradle:${mixingradle_version}"
        classpath "org.parchmentmc:librarian:${librarian_version}"
    }
}
plugins {
    id 'com.matthewprenger.cursegradle' version "${cursegradle_version}"
}
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'org.parchmentmc.librarian.forgegradle'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'
apply plugin: 'org.spongepowered.mixin'


version = project.mod_version + "-forge-mc" + project.minecraft_version
group = project.maven_group
archivesBaseName = project.archives_base_name

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

jarJar {
    // Include or exclude dependencies here from runtime configuration
    dependencies {
        // Exclude any dependency which begins with 'com.google.gson.'
        include (dependency 'org.apfloat:apfloat:2.0')
        include (dependency 'org.jgrapht:jgrapht:1.5.2')
        include (dependency 'org.jgrapht:jgrapht-core:1.5.2')
    }
}

println "Java: ${System.getProperty 'java.version'}, JVM: ${System.getProperty 'java.vm.version'} (${System.getProperty 'java.vendor'}), Arch: ${System.getProperty 'os.arch'}"
minecraft {
    mappings channel: 'parchment', version: "${parchment_version}-${minecraft_version}"

    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    runs {
        client {
            workingDirectory project.file('run')
            arg '-mixin.config=metallurgica.mixins.json'
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'metallurgica'
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${buildDir}/createSrgToMcp/output.srg"
            mods {
                metallurgica {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')
            arg '-mixin.config=metallurgica.mixins.json'
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'metallurgica'
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${buildDir}/createSrgToMcp/output.srg"
            mods {
                metallurgica {
                    source sourceSets.main
                }
            }
        }

        gameTestServer {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'metallurgica'
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${buildDir}/createSrgToMcp/output.srg"
            mods {
                metallurgica {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            args '--mod', 'metallurgica', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                metallurgica {
                    source sourceSets.main
                }
            }
        }
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    maven {
        url = 'https://www.cursemaven.com'
        content {
            includeGroup "curse.maven"
        }
    }
    maven {
        name "JEI"
        url "https://dvs1.progwml6.com/files/maven"
    }
    maven {
        name = 'tterrag maven'
        url = 'https://maven.tterrag.com/'
    }
    maven {
        url = "https://maven.tterrag.com/"
    }
    maven {
        name = "Modrinth"
        url = "https://api.modrinth.com/maven"
        content {
            includeGroup "maven.modrinth"
        }
    }
    maven {
        name = "TerraformersMC"
        url = "https://maven.terraformersmc.com/"
    }
    maven {
        name = 'ConstructLegacy'
        url = 'https://repo.constructlegacy.ru/public'
        content {
            includeGroup 'com.github.dima_dencep.mods'
        }
    }
}

dependencies {
    implementation 'org.projectlombok:lombok:1.18.22'
    implementation 'org.projectlombok:lombok:1.18.22'
    minecraft "net.minecraftforge:forge:${minecraft_version}-${forge_version}"

    implementation fg.deobf("com.tterrag.registrate:Registrate:${registrate_version}")
    implementation fg.deobf("curse.maven:krystal-core-937451:${krystal_core_version}")

    compileOnly fg.deobf("mezz.jei:jei-$minecraft_version-common-api:$jei_version")
    compileOnly fg.deobf("mezz.jei:jei-$minecraft_version-forge-api:$jei_version")
    runtimeOnly fg.deobf("mezz.jei:jei-$minecraft_version-forge:$jei_version")

    annotationProcessor "org.spongepowered:mixin:${mixin_version}:processor"
    testAnnotationProcessor "org.spongepowered:mixin:${mixin_version}:processor"

    implementation fg.deobf("com.simibubi.create:create-${create_minecraft_version}:${create_version}:slim") { transitive = false } //1.19
    implementation fg.deobf("com.jozufozu.flywheel:flywheel-forge-${flywheel_minecraft_version}:${flywheel_version}") //1.19 (Dependency of Create)
    implementation fg.deobf("maven.modrinth:create-tfmg:${tfmg_version}") //1.19

    minecraftLibrary 'org.apfloat:apfloat:1.11.0'
    minecraftLibrary 'org.jgrapht:jgrapht:1.5.2'
    minecraftLibrary 'org.jgrapht:jgrapht-core:1.5.2'
}

jar {
    manifest {
        attributes([
                "Specification-Title"     : "Metallurgica",
                "Specification-Vendor"    : "PouffyDev",
                "Specification-Version"   : "1",
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : project.jar.archiveVersion,
                "Implementation-Vendor"   : "PouffyDev",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                "MixinConfigs": "metallurgica.mixins.json" // TODO: update this for your modid
        ])
    }
}



jar.finalizedBy('reobfJar')

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file://${project.projectDir}/mcmodsrepo"
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}
